{"remainingRequest":"D:\\第四阶段\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\第四阶段\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\第四阶段\\vue_app_000\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\第四阶段\\vue_app_000\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1570501524000},{"path":"D:\\第四阶段\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\第四阶段\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\第四阶段\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"\",\n      //双向绑定用户名\n      upwd: \"\"\n    };\n  },\n  methods: {\n    //添加登录函数\n    login: function login() {\n      var _this = this;\n\n      //完成用户登录操作\n      //验证：去掉用户无效操作\n      //1.创建用户名和密码正则表达式\n      var ureg = /^[a-z0-9]{3,12}$/i; //2.获取用户输入用户名\n\n      var u = this.uname;\n      console.log(u); //3.获取用户输入的密码\n\n      var p = this.upwd;\n      console.log(p); //4.通过正则表达式来验证用户名是否正确\n\n      if (ureg.test(u) == false) {\n        //7.如果验证不正确显示确认消息框\n        this.$messagebox(\"用户名格式不正确\"); //5.停在函数执行\n\n        return;\n      } //6.通过正则表达式验证用户密码是否合法\n\n\n      if (ureg.test(p) == false) {\n        //7.如果验证没通过显示确认信息\n        this.$messagebox(\"消息\", \"密码格式不正确\"); //停在函数执行 \n\n        return;\n      } //8.发送ajax请求\n\n\n      var url = \"login\";\n      var obj = {\n        uname: u,\n        upwd: p\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        console.log(res.data.code);\n\n        if (res.data.code < 0) {\n          _this.$messagebox(\"用户名或密码有误\");\n        } else {\n          //跳转到Product组件\n          _this.$router.push(\"/Product\");\n        }\n      }); //9.获取服务器返回结果\n      //10.登录失败提示消息\n      //11.登录成功跳转 /Product\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AACA;AACA,YAAA;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA;AACA,SAFA,mBAEA;AAAA;;AACA;AACA;AACA;AACA,UAAA,OAAA,mBAAA,CAJA,CAKA;;AACA,UAAA,IAAA,KAAA,KAAA;AACA,cAAA,GAAA,CAAA,CAAA,EAPA,CAQA;;AACA,UAAA,IAAA,KAAA,IAAA;AACA,cAAA,GAAA,CAAA,CAAA,EAVA,CAWA;;AACA,UAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,EAAA;AACA;AACA,aAAA,WAAA,CAAA,UAAA,EAFA,CAGA;;AACA;AACA,OAjBA,CAkBA;;;AACA,UAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,EAAA;AACA;AACA,aAAA,WAAA,CAAA,IAAA,EAAA,SAAA,EAFA,CAGA;;AACA;AACA,OAxBA,CAyBA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,eAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CACA,GADA,EACA;AAAA,gBAAA;AAAA,OADA,EAEA,IAFA,CAEA,eAAA;AACA,gBAAA,GAAA,CAAA,IAAA,IAAA,CAAA,IAAA;;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,GAAA,CAAA,EAAA;AACA,gBAAA,WAAA,CAAA,UAAA;AACA,SAFA,MAEA;AACA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,OAVA,EA5BA,CAuCA;AACA;AACA;AACA;AA5CA;AAPA,CAAA","sourcesContent":["<template>\r\n  <div>  <!-- 模板要求：根元素-->\r\n     <h4>Login.vue</h4>\r\n     <!-- 1.用户输入框 -->\r\n     <mt-field label=\"用户名\" placeholder=\"请输入用户名\" v-model=\"uname\" :attr=\"{autofocus:true}\"></mt-field>\r\n     <!--2.密码输入框 -->\r\n     <mt-field label=\"密码\" placeholder=\"请输入密码\" v-model=\"upwd\"></mt-field>\r\n     <!-- 3.登录按钮 -->\r\n     <mt-button size=\"large\" @click=\"login\">登录</mt-button>     \r\n  </div>   \r\n</template>\r\n<script>\r\n export default{\r\n     data(){\r\n         return{\r\n             uname:\"\",//双向绑定用户名\r\n             upwd:\"\"\r\n         }\r\n     },\r\n    methods:{\r\n        //添加登录函数\r\n        login(){\r\n            //完成用户登录操作\r\n            //验证：去掉用户无效操作\r\n            //1.创建用户名和密码正则表达式\r\n            var ureg=/^[a-z0-9]{3,12}$/i;\r\n            //2.获取用户输入用户名\r\n            var u=this.uname;\r\n            console.log(u)\r\n            //3.获取用户输入的密码\r\n            var p=this.upwd;\r\n            console.log(p)\r\n            //4.通过正则表达式来验证用户名是否正确\r\n            if(ureg.test(u)==false){\r\n                 //7.如果验证不正确显示确认消息框\r\n                this.$messagebox(\"用户名格式不正确\")\r\n            //5.停在函数执行\r\n            return;\r\n           }\r\n           //6.通过正则表达式验证用户密码是否合法\r\n           if(ureg.test(p)==false){\r\n           //7.如果验证没通过显示确认信息\r\n           this.$messagebox(\"消息\",\"密码格式不正确\")\r\n           //停在函数执行 \r\n           return;\r\n           }\r\n           //8.发送ajax请求\r\n           var url=\"login\";\r\n           var obj={uname:u,upwd:p};\r\n           this.axios.get(\r\n               url,{params:obj}\r\n           ).then(res=>{\r\n               console.log(res.data.code);\r\n               if(res.data.code<0){\r\n                   this.$messagebox(\"用户名或密码有误\")\r\n               }else{\r\n                   //跳转到Product组件\r\n                   this.$router.push(\"/Product\")\r\n               }\r\n           });\r\n           //9.获取服务器返回结果\r\n           //10.登录失败提示消息\r\n           //11.登录成功跳转 /Product\r\n        }\r\n     }\r\n\r\n   }\r\n \r\n</script>    \r\n"],"sourceRoot":"src\\components\\xz"}]}